name: lighthouse
on: [push]
env:
  DB_NAME: geniza
  DB_USER: geniza
  DB_PASSWORD: geniza
  DJANGO_ENV: test
jobs:
  main:
    name: lighthouse ci
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
      solr:
        image: solr:9.2
        ports:
          - 8983:8983
    steps:
      - uses: actions/checkout@v4
      - name: Decrypt encrypted fonts zip
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output sitemedia/fonts.zip sitemedia/fonts.zip.gpg
      - name: Unzip decrypted fonts zip
        run: |
          unzip -q -o sitemedia/fonts.zip -d sitemedia
      - name: configure solr and create core
        run: |
          docker cp solr_conf ${{ job.services.solr.id }}:/opt/solr/server/solr/configsets/geniza
          docker exec --user root ${{ job.services.solr.id }} /bin/bash -c "chown -R solr:solr /opt/solr/server/solr/configsets/geniza"
          docker exec -d ${{ job.services.solr.id }} cp -r /opt/solr/server/solr/configsets /var/solr/data
          docker exec ${{ job.services.solr.id }} solr create -c geniza -n geniza
      - run: sudo apt install gettext
      - uses: actions/setup-python@v5
        # uses version set in .python-version
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            pip-${{ hashFiles('pyproject.toml') }}
            pip-
      - run: pip install -e '.[test]'
      - run: python -c "import uuid; print('SECRET_KEY = \'%s\'' % uuid.uuid4())" >> geniza/settings/local_settings.py
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ hashFiles('package-lock.json') }}
            npm-
      - run: npm install -g @lhci/cli@0.13.0 # NOTE: pinned due to globalThis.fetch error
      - run: npm ci
      - run: npm run build
      - run: python manage.py migrate
      - run: python manage.py create_test_site
      - run: python manage.py compilemessages
      - run: python manage.py collectstatic
      - run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
