# Generated by Django 3.2.16 on 2023-03-09 19:35

from django.contrib.auth.management import create_permissions
from django.db import migrations

CONTENT_EDITOR = "Content Editor"
CONTENT_ADMIN = "Content Admin"
# new Dating related permissions for content editor and admin
dating_perms = [
    "change_dating",
    "add_dating",
    "view_dating",
    "delete_dating",
]


def grant_dating_permissions(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    # make sure permissions are created before loading the fixture
    # which references them
    # (when running migrations all at once, permissions may not yet exist)
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None

    editor_group = Group.objects.get(name=CONTENT_EDITOR)
    admin_group = Group.objects.get(name=CONTENT_ADMIN)
    permissions = []
    for codename in dating_perms:
        # using explicit get so that there will be an error if an
        # expected permission is not found
        permissions.append(Permission.objects.get(codename=codename))
    # update both groups to add dating permissions
    editor_group.permissions.add(*permissions)
    admin_group.permissions.add(*permissions)


class Migration(migrations.Migration):

    dependencies = [
        ("corpus", "0037_create_dating"),
    ]
    operations = [
        migrations.RunPython(
            grant_dating_permissions, reverse_code=migrations.RunPython.noop
        )
    ]
