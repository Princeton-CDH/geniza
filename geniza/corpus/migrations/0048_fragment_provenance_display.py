# Generated by Django 3.2.23 on 2025-04-15 19:49

import django.db.models.deletion
from django.contrib.auth.management import create_permissions
from django.db import migrations, models

CONTENT_EDITOR = "Content Editor"
CONTENT_ADMIN = "Content Admin"
# new Provenance related permissions for content editor and admin
provenance_perms = [
    "change_provenance",
    "add_provenance",
    "view_provenance",
    "delete_provenance",
]


def grant_provenance_permissions(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    # make sure permissions are created before loading the fixture
    # which references them
    # (when running migrations all at once, permissions may not yet exist)
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None

    editor_group = Group.objects.get(name=CONTENT_EDITOR)
    admin_group = Group.objects.get(name=CONTENT_ADMIN)
    permissions = []
    for codename in provenance_perms:
        # using explicit get so that there will be an error if an
        # expected permission is not found
        permissions.append(Permission.objects.get(codename=codename))
    # update both groups to add provenance permissions
    editor_group.permissions.add(*permissions)
    admin_group.permissions.add(*permissions)


def populate_provenance_display(apps, schema_editor):
    """Populate the initial Provenance options"""
    Provenance = apps.get_model("corpus", "Provenance")
    provenance_options = ["Geniza", "Probably Geniza", "Not Geniza"]
    for name in provenance_options:
        Provenance.objects.get_or_create(name=name, name_en=name)


class Migration(migrations.Migration):
    dependencies = [
        ("corpus", "0047_collection_url"),
    ]

    operations = [
        migrations.CreateModel(
            name="Provenance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("name_he", models.CharField(max_length=255, null=True)),
                ("name_ar", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name="fragment",
            name="provenance",
            field=models.TextField(
                blank=True,
                help_text="Detailed origin and acquisition history of this fragment.",
                verbose_name="Provenance notes",
            ),
        ),
        migrations.AddField(
            model_name="fragment",
            name="provenance_display",
            field=models.ForeignKey(
                blank=True,
                help_text="Origin of this fragment, for public display.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="corpus.provenance",
                verbose_name="Provenance",
            ),
        ),
        migrations.RunPython(grant_provenance_permissions, migrations.RunPython.noop),
        migrations.RunPython(populate_provenance_display, migrations.RunPython.noop),
    ]
