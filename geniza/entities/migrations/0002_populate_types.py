# Generated by Django 3.2.16 on 2023-06-12 20:55

from django.db import migrations


def populate_types(apps, schema_editor):
    """Populate the English names for predetermined types and roles."""
    PersonRole = apps.get_model("entities", "PersonRole")
    PersonDocumentRelationType = apps.get_model(
        "entities", "PersonDocumentRelationType"
    )
    PersonPersonRelationType = apps.get_model("entities", "PersonPersonRelationType")

    social_roles = [
        "State official",
        "Jewish communal official",
        "Muslim judicial official",
        "Enslaved person",
        "Jewish community member",
        "Other",
    ]
    for role in social_roles:
        PersonRole.objects.create(name=role, name_en=role)

    person_document_relations = [
        "Sender",
        "Recipient",
        "Protagonist",
        "Legal and state personnel",
        "Witness",
        "Petitioner",
        "Author",
        "Scribe",
        "Other person mentioned",
    ]
    for relation_type in person_document_relations:
        PersonDocumentRelationType.objects.create(
            name=relation_type,
            name_en=relation_type,
        )

    # these constants are also defined on the model, but we can't get them here
    IMMEDIATE_FAMILY = "I"
    EXTENDED_FAMILY = "E"
    BY_MARRIAGE = "M"
    BUSINESS = "B"
    person_person_relations = [
        (
            IMMEDIATE_FAMILY,
            [
                "Child",
                "Sibling",
                "Half-sibling",
                "Parent",
                "Slave",
                "Owner",
                "Spouse",
            ],
        ),
        (
            EXTENDED_FAMILY,
            [
                "Maternal aunt or uncle",
                "Maternal cousin",
                "Paternal aunt or uncle",
                "Paternal cousin",
                "Grandchild",
                "Great aunt or uncle",
                "Great grandparent",
                "Great grandchild",
            ],
        ),
        (
            BY_MARRIAGE,
            [
                "Daughter-in-law or son-in-law",
                "Sister-in-law or brother-in-law",
                "Mother-in-law or father-in-law",
                "Stepparent",
                "Stepchild",
            ],
        ),
        (
            BUSINESS,
            [
                "Partner",
                "Debtor",
                "Lender",
                "Beneficiary (of will or gift)",
                "Testator/grantor (of will or gift)",
                "Seller",
                "Buyer",
            ],
        ),
    ]
    for grouping in person_person_relations:
        (category, relation_types) = grouping
        for relation_type in relation_types:
            PersonPersonRelationType.objects.create(
                name=relation_type,
                name_en=relation_type,
                category=category,
            )


class Migration(migrations.Migration):

    dependencies = [
        ("entities", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(populate_types, reverse_code=migrations.RunPython.noop),
    ]
