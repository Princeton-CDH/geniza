# Generated by Django 3.2.23 on 2024-03-21 16:41

import re

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("entities", "0020_alter_name_language"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A short name for the event to use as a display label",
                        max_length=255,
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        help_text="A short name for the event to use as a display label",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "name_he",
                    models.CharField(
                        help_text="A short name for the event to use as a display label",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "name_ar",
                    models.CharField(
                        help_text="A short name for the event to use as a display label",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="A description of the event"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, help_text="A description of the event", null=True
                    ),
                ),
                (
                    "description_he",
                    models.TextField(
                        blank=True, help_text="A description of the event", null=True
                    ),
                ),
                (
                    "description_ar",
                    models.TextField(
                        blank=True, help_text="A description of the event", null=True
                    ),
                ),
                (
                    "display_date",
                    models.CharField(
                        blank=True,
                        help_text='Display date for manually entered or automatically generated date,\n        as it should appear in the public site, such as "Late 12th century"',
                        max_length=255,
                        verbose_name="Display date",
                    ),
                ),
                (
                    "standard_date",
                    models.CharField(
                        blank=True,
                        help_text="Manual override for automatically generated date or date range. Convert to Julian before 1582, Gregorian after 1582. \nUse YYYY, YYYY-MM, YYYY-MM-DD format or YYYY-MM-DD/YYYY-MM-DD for date ranges.",
                        max_length=255,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile(
                                    "^\\d{3,4}(-[01]\\d(-[0-3]\\d)?)?(/\\d{3,4}(-[01]\\d(-[0-3]\\d)?)?)?$"
                                )
                            )
                        ],
                        verbose_name="CE date override",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlaceEventRelation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="entities.event"
                    ),
                ),
                (
                    "place",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="entities.place"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonEventRelation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="entities.event"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entities.person",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="person",
            name="events",
            field=models.ManyToManyField(
                related_name="people",
                through="entities.PersonEventRelation",
                to="entities.Event",
                verbose_name="Related Events",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="events",
            field=models.ManyToManyField(
                related_name="places",
                through="entities.PlaceEventRelation",
                to="entities.Event",
                verbose_name="Related Events",
            ),
        ),
    ]
