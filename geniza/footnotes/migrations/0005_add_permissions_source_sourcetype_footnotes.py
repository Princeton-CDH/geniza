# Generated by Django 3.1.7 on 2021-04-01 15:11

from django.contrib.auth.management import create_permissions
from django.db import migrations

# Models:
#   sourcetype, source, footnote
# Permissions:
#   view_sourcetype
#   add_sourcetype
#   change_sourcetype
#   delete_sourcetype
#   view_source
#   add_source
#   change_source
#   delete_source
#   view_footnote
#   add_footnote
#   change_footnote
#   delete_footnote

CONTENT_EDITOR = 'Content Editor'
# new permissions for content editor
content_editor_perms = [
    'view_creator', 'add_creator', 'change_creator',
    'view_sourcetype', 'add_sourcetype', 'change_sourcetype',
    'view_source', 'add_source', 'change_source',
    'view_footnote', 'add_footnote', 'change_footnote',
]


CONTENT_ADMIN = 'Content Admin'
# additional new permissions for content admin
content_admin_perms = [
    'delete_sourcetype',
    'delete_source',
    'delete_footnote',
    'delete_creator',
]


def create_content_editor_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    # make sure permissions are created before loading the fixture
    # which references them
    # (when running migrations all at once, permissions may not yet exist)
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None

    editor_group = Group.objects.get(name=CONTENT_EDITOR)
    permissions = []
    for codename in content_editor_perms:
        # using explicit get so that there will be an error if an
        # expected permission is not found
        permissions.append(Permission.objects.get(codename=codename))
    editor_group.permissions.add(*permissions)

    # update content admin group; add to content edit permissions
    admin_group = Group.objects.get(name=CONTENT_ADMIN)
    for codename in content_admin_perms:
        permissions.append(Permission.objects.get(codename=codename))
    admin_group.permissions.add(*permissions)


class Migration(migrations.Migration):

    dependencies = [
        ('footnotes', '0007_make_creator_model')
    ]

    operations = [
        migrations.RunPython(create_content_editor_groups,
                             reverse_code=migrations.RunPython.noop)
    ]
