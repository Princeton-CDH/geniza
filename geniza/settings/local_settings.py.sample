# local settings for configuration that should not be checked into git
#
# NOTE importing variables into this file can change their values! this file
# can already access everything declared in base.py without imports.

DEBUG = True

FEATURE_FLAGS = [
    # "SHOW_WARNING_BANNER", # Uncomment this in test/QA site to show test banner
    # "SHOW_RELEVANCE_SCORES", # Uncomment in test/QA site to show search result relevance scores
]
# Uncomment and change these to override the default test banner message
# WARNING_BANNER_HEADING = "This is a test site"
# WARNING_BANNER_MESSAGE = "Content may change or be removed without warning"

# Turn this on to enable google analytics in production
# INCLUDE_ANALYTICS = True

# SECURITY WARNING: keep the secret key used in production secret!
# Make these unique, and don't share them with anybody.
SECRET_KEY = ""

# configure & override database setting as needed
DATABASES["default"]["PASSWORD"] = ""

# override default solr configuration as needed
# SOLR_CONNECTIONS['default']['URL'] = ''      # default http://localhost:8983/solr/
# SOLR_CONNECTIONS['default']['COLLECTION'] = ''  # default geniza
# SOLR_CONNECTIONS['default']['CONFIGSET'] = ''   # default geniza

# Development webpack config: don't cache bundles
WEBPACK_LOADER["DEFAULT"]["CACHE"] = False

# Uncomment below to switch to the development webpack manifest, which expects
# a running webpack dev server to serve files from memory and enable autoreload.
# WEBPACK_LOADER["DEFAULT"]["STATS_FILE"] = (
#     BASE_DIR.parent / "sitemedia" / "webpack-stats-dev.json"
# )

# CAS login configuration
CAS_SERVER_URL = ""

PUCAS_LDAP.update(
    {
        "SERVERS": [],
        "SEARCH_BASE": "",
        "SEARCH_FILTER": "",
    }
)

# base url for manifest uris used with annotation server; override if needed
# ANNOTATION_MANIFEST_BASE_URL = "https://geniza.princeton.edu"

# urls to google sheets data published as csv for import
DATA_IMPORT_URLS = {
    "libraries": "",
    "languages": "",
    "metadata": "",
    "demerged": "",
}

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'basic': {
#             'format': '[%(asctime)s] %(levelname)s:%(name)s::%(message)s',
#             'datefmt': '%d/%b/%Y %H:%M:%S',
#         },
#     },
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#             'formatter': 'basic'
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
#         },
#         'parasolr': {
#             'handlers': ['console'],
#             'level': 'DEBUG'
#         },
#         'parasolr.django.signals': {
#             'handlers': ['console'],
#             'level': 'INFO'
#         }
#     }
# }

# https://github.com/mozilla/django-csp
# Content security policy controls - see `settings/base.py` for policy settings.
# In development, leave both lines commented out to block & not report.
# In QA, set REPORT_ONLY to True and specify a "report-only" endpoint.
# In production, set REPORT_ONLY to False and specify an "enforced" endpoint.
# CSP_REPORT_ONLY = False
# CSP_REPORT_URI = ""

# path to preliminary JSON transcription data
TRANSCRIPTIONS_JSON_FILE = BASE_DIR.parent / "data" / "transcriptions.json"

# Languages to make visible on the public site/front-end in addition to the admin site.
# If undefined, all LANGUAGES will be enabled on both the public and admin site.
# Must be a subset of the language codes in LANGUAGES from base settings, or undefined.
# PUBLIC_SITE_LANGUAGES = [
#    "en",
#    "he",
#    "ar",
# ]

# Google Analytics tracking ID
# GTAGS_ANALYTICS_ID = ''

# TinyMCE API key
# TINY_API_KEY = ''


# URL for git repository of transcription annotation backups
# ANNOTATION_BACKUP_GITREPO = ""
# local path where git repo should be cloned
# ANNOTATION_BACKUP_PATH = "data/annotations_backup"

# URL for the metadata repository
# METADATA_BACKUP_GITREPO = 'https://github.com/Princeton-CDH/test-geniza-metadata'
# Local path for metadata repo
# METADATA_BACKUP_PATH = 'data/metadata_repo'

# Maptiler API token, required for showing maps on the admin site and the public site
# for more information: https://docs.maptiler.com/cloud/api/authentication-key/
# MAPTILER_API_TOKEN = ''
