// -----------------------------------------------------------------------------
// Global styles & overrides for basic HTML elements.
// -----------------------------------------------------------------------------

@use "breakpoints";
@use "colors";
@use "typography";
@use "container";
@use "icons";
@use "a11y";

// Use more intuitive box-sizing for all elements, but make it easy to override.
// See: https://every-layout.dev/rudiments/boxes/#the-box-sizing-property
html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

// Use an exception-based approach to ensure we apply our desired measure to as
// many elements as possible. See:
// https://every-layout.dev/rudiments/axioms/#exception-based-styling
* {
    @include container.measure;
}

html,
body,
div,
header,
nav,
main,
footer {
    max-width: none;
}

// Globally apply font-smoothing to improve rendering.
html {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}

// Body setup: vertical stack that always takes at least the full page height.
body {
    color: var(--on-background);
    background-color: var(--background);
    @include typography.body;

    display: flex;
    flex-direction: column;
    min-height: 100vh;
}
html[lang="he"] body {
    @include typography.body-he;
    *[lang="en"] {
        // override for English-language content
        @include typography.body;
    }
}
html[lang="ar"] body {
    @include typography.body-ar;
    *[lang="en"] {
        // override for English-language content
        @include typography.body;
    }
}

// Center-align sections of main content using flexbox.
main {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: 1 0 auto;
}

// Apply basic typographic styles defined in the typography module,
// including Hebrew variants (with exceptions for English content in Hebrew site)
h1 {
    @include typography.headline-1;
}
html[lang="he"] h1:not([lang="en"]) {
    @include typography.headline-1-he;
}
html[lang="ar"] h1:not([lang="ar"]) {
    @include typography.headline-1-ar;
}

h2 {
    @include typography.headline-2;
}
html[lang="he"] h2:not([lang="en"]) {
    @include typography.headline-2-he;
}
html[lang="ar"] h2:not([lang="ar"]) {
    @include typography.headline-2-ar;
}

h3 {
    @include typography.headline-3;
}
html[lang="he"] h3:not([lang="en"]) {
    @include typography.headline-3-he;
}
html[lang="ar"] h3:not([lang="ar"]) {
    @include typography.headline-3-ar;
}

// Any links without a class (i.e. in body text) get the default link style;
// if other links need it they can extend the same mixin.
a:not([class]) {
    @include typography.link;
}

figcaption,
small {
    @include typography.caption;
}

blockquote {
    @include typography.quote;
}

em {
    font-style: italic;
}

turbo-frame {
    max-width: none;
}

// "Primary" button style
button.primary {
    @include typography.meta-bold;
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 0.75rem 1.5rem;
    height: 2.75rem;
    @include breakpoints.for-tablet-landscape-up {
        height: 3.375rem;
    }
    box-sizing: border-box;
    border-radius: 2px;
    border: 1px solid var(--button-primary);
    background-color: var(--button-primary);
    color: var(--background);
    cursor: pointer;
    &:focus {
        background-color: var(--button-primary);
        border: 1px solid var(--button-focus);
        outline: 1px solid var(--button-focus);
    }
    &:hover,
    &:active {
        border: 1px solid var(--button-primary);
        background-color: var(--background);
        color: var(--button-primary);
    }
    &:hover {
        outline: none;
    }
    &:active {
        outline: 1px solid var(--button-primary);
    }
}
